{"version":3,"file":"Text.a260593a.js","sources":["../../src/components/Text.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\nimport { clsx, IDinamicClass } from \"../utils/clsx\";\n\ntype TAs = \"p\" | \"span\" | \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\"\n\nexport interface TextProps {\n    children: ReactNode,\n    className?: string,\n    size?: \"sm\" | \"md\" | \"lg\",\n    as?: TAs,\n}\n\ninterface TextConteinerTypeProps {\n    children: ReactNode,\n    elClass?: string\n    as?: TAs,\n}\n\nfunction TextConteinerType ({as = \"span\", elClass, children }: TextConteinerTypeProps) {\n    let el: JSX.Element;\n\n    switch (as) {\n        case \"p\":\n            el = (<p className={elClass}>{children}</p>)\n            break;\n        case \"h1\":\n            el = (<h1 className={elClass}>{children}</h1>)\n            break;\n        case \"h2\":\n            el = (<h2 className={elClass}>{children}</h2>)\n            break;\n        case \"h3\":\n            el = (<h3 className={elClass}>{children}</h3>)\n            break;\n        case \"h4\":\n            el = (<h4 className={elClass}>{children}</h4>)\n            break;\n        case \"h5\":\n            el = (<h5 className={elClass}>{children}</h5>)\n            break;\n        case \"h6\":\n            el = (<h6 className={elClass}>{children}</h6>)\n            break;    \n        case \"span\":\n        default:\n            el = (<span className={elClass}>{ children }</span>)\n            break;\n    }\n\n    return el;\n}\n\nexport function Text ({ as=\"span\", size=\"sm\", className: internalClass, children }: TextProps) {\n    const isSpanOrP = as == \"span\" || as == \"p\"\n    const staticClass = internalClass ? internalClass : \"text-gold-50 text-sans\";\n    \n    const dinamicClass: IDinamicClass = (isSpanOrP) ? {\n        \"text-xs\": size == \"sm\",\n        \"text-sm\": size == \"md\",\n        \"text-md\": size == \"lg\"\n    } : {\n        \"font-bold text-lg\": size == \"sm\",\n        \"font-bold text-xl\": size == \"md\",\n        \"font-bold text-2xl\": size == \"lg\"\n    }\n\n    return (\n        <TextConteinerType as={as} elClass={clsx(staticClass, dinamicClass)}>\n            { children }\n        </TextConteinerType>\n    )\n}\n"],"names":["TextConteinerType","as","elClass","el","__name","Text","size","internalClass","isSpanOrP","staticClass","dinamicClass","_jsx","clsx","children"],"mappings":"oKAkBA,SAAAA,EAAA,CAA4B,GAAAC,EAAA,OAAM,QAAAC,EAAQA,SAAAA,CAA0C,EAAA,CAChF,IAAAC,EAEA,OAAAF,EAAA,CAAU,IAAA,IAEFE,EAAAA,EAAAA,IAAAA,CAAM,UAAAD,EAAcA,SAAAA,CAAQ,CAAA,EAC5B,MAAA,IAAA,KAEAC,EAAAA,EAAAA,KAAAA,CAAM,UAAAD,EAAeA,SAAAA,CAAQ,CAAA,EAC7B,MAAA,IAAA,KAEAC,EAAAA,EAAAA,KAAAA,CAAM,UAAAD,EAAeA,SAAAA,CAAQ,CAAA,EAC7B,MAAA,IAAA,KAEAC,EAAAA,EAAAA,KAAAA,CAAM,UAAAD,EAAeA,SAAAA,CAAQ,CAAA,EAC7B,MAAA,IAAA,KAEAC,EAAAA,EAAAA,KAAAA,CAAM,UAAAD,EAAeA,SAAAA,CAAQ,CAAA,EAC7B,MAAA,IAAA,KAEAC,EAAAA,EAAAA,KAAAA,CAAM,UAAAD,EAAeA,SAAAA,CAAQ,CAAA,EAC7B,MAAA,IAAA,KAEAC,EAAAA,EAAAA,KAAAA,CAAM,UAAAD,EAAeA,SAAAA,CAAQ,CAAA,EAC7B,MAAA,IAAA,OACC,QAEDC,EAAAA,EAAAA,OAAAA,CAAM,UAAAD,EAAiBA,SAAAA,CAAQ,CAAA,EAC/B,KAAA,CAGR,OAAAC,CACJ,CAhCAC,EAAAJ,EAAA,qBAkCO,SAAAK,EAAA,CAAe,GAAAJ,EAAA,OAAK,KAAAK,EAAA,KAAa,UAAAC,EAAiBA,SAAAA,CAAmC,EAAA,CACxF,MAAAC,EAAAP,GAAA,QAAAA,GAAA,IACAQ,EAAAF,GAAA,yBAEAG,EAAAF,EAAA,CAAkD,UAAAF,GAAA,KAC3B,UAAAA,GAAA,KACA,UAAAA,GAAA,IACA,EAAA,CACnB,oBAAAA,GAAA,KAC6B,oBAAAA,GAAA,KACA,qBAAAA,GAAA,IACC,EAGlC,OAAAK,EAAAX,EAAA,CACsB,GAAAC,EAAC,QAAAW,EAAAH,EAAAC,CAAA,EAA+C,SAAAG,CAAE,CAAA,CAI5E,CAnBOT,EAAAC,EAAA"}